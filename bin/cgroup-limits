#!/bin/bash
#
# Script for parsing cgroup information
#
# This script will read some limits from the cgroup system and parse
# them, printing out "VARIABLE=VALUE" on each line for every limit that is
# successfully read. Output of this script can be directly fed into
# bash's export command. Recommended usage from a bash script:
#
#     source cgroup-limits
#
# Variables currently supported:
#     MEMORY_LIMIT_IN_BYTES
#         Maximum amount of user memory in bytes. If this value is empty,
#         it means that there is no limit set. The value is taken from
#         /sys/fs/cgroup/memory/memory.limit_in_bytes
#
#         Default: 9223372036854771712 (arbitary high value)
#     NUMBER_OF_CORES
#         Number of detected CPU cores that can be used. This value is
#         calculated from /sys/fs/cgroup/cpuset/cpuset.cpus
#     NO_MEMORY_LIMIT
#         Set to "true" if MEMORY_LIMIT_IN_BYTES is so high that the caller
#         can act as if no memory limit was set. Undefined otherwise.
#

if [ -f /sys/fs/cgroup/memory/memory.limit_in_bytes ]; then
  export MEMORY_LIMIT_IN_BYTES=$(cat /sys/fs/cgroup/memory/memory.limit_in_bytes)
else
  export MEMORY_LIMIT_IN_BYTES='9223372036854771712'
fi

if [ -f /sys/fs/cgroup/cpuset/cpuset.cpus ]; then
  export NUMBER_OF_CORES=$(cat /sys/fs/cgroup/cpuset/cpuset.cpus)
else
  export NUMBER_OF_CORES=1
fi

if [ $MEMORY_LIMIT_IN_BYTES == '' ]; then
  export NO_MEMORY_LIMIT="true"
else
  export NO_MEMORY_LIMIT="false"
fi
